/*! signet 17-04-2017 */

function signetBuilder(a,b,c,d,e){"use strict";function f(b,c){var e=d.parseType(c),f=a.isTypeOf(e);a.defineSubtypeOf(e.type)(b,function(a){return f(a)})}function g(b){return"string"==typeof b?a.isTypeOf(d.parseType(b)):b}function h(a,b,c){return Object.defineProperty(a,b,{value:c,writeable:!1}),a}function i(a,b){return h(a,"signatureTree",b),Object.defineProperty(a,"signature",{writeable:!1,get:function(){return e.assembleSignature(a.signatureTree)}}),a}function j(a,b){var d=c.checkSignature(a),f=a.length-1;if(a.length<2)throw new SyntaxError("Signature must have both input and output types");if(a[0].length<b.length)throw new Error("Signature declaration too short for function with "+b.length+" arguments.");if(a[f].length>1)throw new SyntaxError("Signature can only have a single output type");if(null!==d){var g=d.map(e.assembleType);throw new TypeError("Signature contains invalid types: "+g.join(", "))}}function k(a,b){return i(b,a),h(b,"signatureTree",a)}function l(a,b){var c=d.parseSignature(a);return j(c,b),k(c,b)}function m(a){return a[a.length-1]}function n(a,b){var c=typeof a[1],d="Expected a "+b+"value of type "+a[0]+" but got "+a[1]+" of type "+c;throw new TypeError(d)}function o(a,c){var d=b.validateArguments(a.signatureTree[0])(c);null!==d&&n(d,"")}function p(a,c){return function(){var d=Array.prototype.slice.call(arguments,0),f=b.validateArguments(a[0])(d);null!==f&&n(f,"");var g=a.length>2,h=g?R:m(a)[0],i=e.assembleType(h),j=c.apply(null,d);return b.validateType(h)(j)||n([i,j],"return "),g?r(a.slice(1),j):j}}function q(a){for(var b="a".charCodeAt(0),c=[],d=0;d<a;d++)c.push(String.fromCharCode(b+d));return c.join(", ")}function r(a,b){var c=p(a,b),d=q(b.length),e=Function("enforcer",S.replace("{args}",d))(c);return e.toString=b.toString.bind(b),k(a,e)}function s(b){return b.typeCheck=a.isTypeOf(b),b}function t(a){var b=a.map(s);return b.dependent=a.dependent,b}function u(a){return a.map(t)}function v(a,b){return r(u(d.parseSignature(a)),b)}function w(b,c){a.defineSubtypeOf("object")(b,x(c))}function x(a){var b=Object.keys(a).map(function(b){return[b,g(a[b])]});return function(a){return b.reduce(function(b,c){var d=c[0],e=c[1];return b&&e(a[d])},!0)}}function y(a){return function(b,c){return!a(b,c)}}function z(a,b){function c(c){return a[c]!==b[c]}if(F(a)||F(b)||a===b)return a===b;var d=Object.keys(a);return!(d.length!==Object.keys(b).length)&&0===d.filter(c).length}function A(a,b){return typeof a==typeof b}function B(a,b){return a>b}function C(a,b){return a<b}function D(a,b){return a===b}function E(a){return function(b){return typeof b===a}}function F(a){return null===a}function G(a){return"[object Array]"===Object.prototype.toString.call(a)}function H(a){return Math.floor(a)===a}function I(){function a(a,b){return b.min<=a&&a<=b.max}return a.preprocess=J,a}function J(a){return{min:Number(a[0]),max:Number(a[1])}}function K(a,b){return T(a.length,b)}function L(a){return RegExp(a.join(";"))}function M(a,b){return null!==a.match(b)}function N(a){return a.map(g)}function O(a,b){function c(b,c,d){return b&&c(a[d])}return a.length===b.length&&b.reduce(c,!0)}function P(a,b){function c(b){return b(a)}return 0===b.length||b.filter(c).length>0}function Q(a,b){return console.warn("Tagged Union is deprecated, use variant instead."),P(a,b)}var R=d.parseType("function"),S=["return function ({args}){","return enforcer.apply(null, Array.prototype.slice.call(arguments))","}"].join(""),T=I();return K.preprocess=J,M.preprocess=L,O.preprocess=N,P.preprocess=N,Q.preprocess=N,a.define("boolean",E("boolean")),a.define("function",E("function")),a.define("number",E("number")),a.define("object",E("object")),a.define("string",E("string")),a.define("symbol",E("symbol")),a.define("undefined",E("undefined")),a.define("null",F),a.define("variant",P),a.define("taggedUnion",Q),a.defineSubtypeOf("object")("array",G),a.defineSubtypeOf("number")("int",H),a.defineSubtypeOf("number")("bounded",I()),a.defineSubtypeOf("int")("boundedInt",I()),a.defineSubtypeOf("string")("boundedString",K),a.defineSubtypeOf("string")("formattedString",M),a.defineSubtypeOf("array")("tuple",O),f("any","*"),f("void","*"),f("type","variant<string; function>"),f("arguments","variant<array; object>"),a.defineDependentOperatorOn("number")(">",B),a.defineDependentOperatorOn("number")("<",C),a.defineDependentOperatorOn("number")("=",D),a.defineDependentOperatorOn("number")(">=",y(C)),a.defineDependentOperatorOn("number")("<=",y(B)),a.defineDependentOperatorOn("number")("!=",y(D)),a.defineDependentOperatorOn("string")("=",D),a.defineDependentOperatorOn("string")("!=",y(D)),a.defineDependentOperatorOn("object")("=",z),a.defineDependentOperatorOn("object")("!=",y(z)),a.defineDependentOperatorOn("variant")("isTypeOf",A),a.defineDependentOperatorOn("taggedUnion")("isTypeOf",A),{alias:v("string, string => undefined",f),duckTypeFactory:v("object => function",x),defineDuckType:v("string, object => undefined",w),defineDependentOperatorOn:v("string => string, function => undefined",a.defineDependentOperatorOn),enforce:v("string, function => function",v),extend:v("string, function => undefined",a.define),isSubtypeOf:v("string => string => boolean",a.isSubtypeOf),isType:v("string => boolean",a.isType),isTypeOf:v("type => * => boolean",g),sign:v("string, function => function",l),subtype:v("string => string, function => undefined",a.defineSubtypeOf),typeChain:v("string => string",a.getTypeChain),verify:v("function, arguments => undefined",o)}}var signetAssembler=function(){"use strict";function a(a){return a.subtype&&a.subtype.length>0}function b(b){return a(b)?"<"+b.subtype.join(";")+">":""}function c(a){var c=a.type+b(a);return a.optional?"["+c+"]":c}function d(a){return a.map(c).join(", ")}function e(a){return a.map(d).join(" => ")}return{assembleSignature:e,assembleType:c}}();"udefined"!=typeof module&&void 0!==module.exports&&(module.exports=signetAssembler);var signetChecker=function(){"use strict";return function(a){function b(b){return"function"==typeof a.get(b.type)}function c(a,b){return a.concat(b)}function d(a){return function(b){return!a(b)}}function e(a){var e=a.reduce(c,[]).filter(d(b));return e.length>0?e:null}return{checkSignature:e,checkType:b}}}();"undefined"!=typeof module&&void 0!==module.exports&&(module.exports=signetChecker);var signetParser=function(){"use strict";function a(a,b){return 1===a.length&&";"===b||">"===b&&0===a.length}function b(a){return null!==a.match(/[\<\;\s]/)}function c(a,c){return a.length>1||0===a.length&&">"===c||a.length>0&&!b(c)}function d(a,b){"<"===b?a.push(b):">"===b&&a.pop()}function e(a){return function(b,d){return c(a,d)?b+d:b}}function f(b,c){return function(d,e){a(b,e)&&c.push(d)}}function g(b,c){return function(d,e){return a(b,e)?"":c(d,e)}}function h(a){var b="",c=[],h=[],i=g(h,e(h)),j=f(h,c);return a.split("").forEach(function(a){d(h,a),j(b,a),b=i(b,a)}),c}function i(a){var b=a.replace(/^([^\:]+)\:(.+)$/,"$1"),c=a.replace(/^([^\:]+)\:(.+)$/,"$2");return{name:b===a?null:b.trim(),type:c.split("<")[0].replace(/\[|\]/g,"").trim(),subtype:h(c),optional:null!==c.match(/^\[[^\]]+\]$/)}}function j(a){var b=a.trim().split(/\s+/g);return{operator:b[1],left:b[0],right:b[2]}}function k(a){var b=a.split(/\s*\:\:\s*/),c=b.length>1?b.shift():null,d=b[0].split(/\s*\,\s*/).map(i);return d.dependent=null===c?null:j(c),d}function l(a){return a.split(/\s*\=\>\s*/).map(k)}return{parseSignature:l,parseType:i}}();"undefined"!=typeof module&&void 0!==module.exports&&(module.exports=signetParser);var signetRegistrar=function(){"use strict";return function(){function a(a,b){return typeof b===a}function b(b){return a("string",b)&&null!==b.match(/^[^\(\)\<\>\[\]\:\;\=\,\s]+$/)}function c(c,d){if(!b(c))throw new Error("Invalid type name: "+c);if(!a("undefined",f[c]))throw new Error("Type already registered with name "+c);if(!a("function",d))throw new Error("Type predicate parameter must be a function")}function d(a){return f[a]}function e(a,b){c(a,b),f[a]=b}var f={};return{get:d,set:e}}}();"undefined"!=typeof module&&void 0!==module.exports&&(module.exports=signetRegistrar);var signetTypelog=function(a,b){"use strict";function c(a){return function(b){return a.optional&&void 0===b}}function d(b){var d=c(b);return function(c){return a.get(b.type)(c,b.subtype)||d(c)}}function e(a,b,c){Object.defineProperty(a,b,{value:c,writeable:!1})}function f(b){return function(c,d){e(d,"parentTypeName",b),a.set(c,d)}}function g(b){return"function"==typeof a.get(b)}function h(b){return function(c){var d=a.get(c).parentTypeName,e=void 0===d,f=d===b;return e||f?f:h(b)(d)}}function i(b){var c=k(b);return function(d){var e=a.get(b.type),f=e.parentTypeName;return!(void 0!==f)||l(c,f,d)}}function j(a){return a}function k(b){var c=a.get(b.type),d="function"==typeof c.preprocess?c.preprocess:j;return{name:b.name,type:b.type,subtype:d(b.subtype),originalSubtype:b.subtype,optional:b.optional}}function l(a,c,e){var f=b.parseType(c);return f.subtype.concat(a.originalSubtype),i(f)(e)&&d(a)(e)}function m(b){var c=a.get(b);return void 0!==c.parentTypeName?m(c.parentTypeName)+" -> "+b:b}function n(b){var c=a.get(b);return function(a,b){e(c,a,{operator:a,operation:b})}}function o(b){return function(c){var d=a.get(b);return"object"==typeof d[c]?d[c]:"*"==b?null:o(d.parentTypeName)(c)}}return a.set("*",function(){return!0}),{define:f("*"),defineDependentOperatorOn:n,defineSubtypeOf:f,getDependentOperatorOn:o,getTypeChain:m,isType:g,isTypeOf:i,isSubtypeOf:h}};"undefined"!=typeof module&&void 0!==module.exports&&(module.exports=signetTypelog);var signetValidator=function(){"use strict";function a(a){return a[0]}function b(a){return a.slice(1)}return function(c,d){function e(a){return"object"==typeof a&&null!==a}function f(a,b,c){return a.optional&&(c.length>1||void 0===b)}function g(a){return"function"==typeof a.typeCheck?a.typeCheck:c.isTypeOf(a)}function h(c,e){var h=a(c),i=a(e),j=g(h)(i),k=j?b(e):e,l=n(b(c));return j||f(h,i,c)?l(k):[d.assembleType(h),i]}function i(a,b,c){var d=null;if(!c.operation(a.value,b.value)){d=[[a.name,c.operator,b.name].join(" "),[a.name,"=",a.value,"and",b.name,"=",b.value].join(" ")]}return d}function j(){return!1}function k(a,b){var d=c.getDependentOperatorOn(a)(b);return null===d&&(d={operator:b,operation:j}),d}function l(a,b,c){var d=null;if(null===c&&e(a)){var f=b[a.left];d=i(f,b[a.right],k(f.typeNode.type,a.operator))}return null===d?c:d}function m(a,b){for(var c,d,e={},f=a.length,g=0;g<f;g++)c=a[g],d=c.name,e[d]={name:d,value:b[g],typeNode:a[g]};return e}function n(a){var b=a.dependent;return function(c){var d=m(a,c),e=0===a.length?null:h(a,c);return l(b,d,e)}}return{validateArguments:n,validateType:g}}}();"undefined"!=typeof module&&void 0!==typeof module.exports&&(module.exports=signetValidator),"undefined"!=typeof module&&void 0!==module.exports&&(module.exports=signetBuilder);var signet=function(){"use strict";function a(){var a=signetAssembler,b=signetParser,c=signetRegistrar(),d=signetChecker(c),e=signetTypelog(c,b);return signetBuilder(e,signetValidator(e,a),d,b,a)}return"undefined"!=typeof module&&void 0!==module.exports&&(module.exports=a),a()}();
//# sourceMappingURL=signet.min.js.map